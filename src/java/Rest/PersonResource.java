/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Rest;

import Hibernate.HibernateStuff;
import Model.Note;
import Model.Person;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.UriInfo;
import javax.ws.rs.Consumes;
import javax.ws.rs.Produces;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PUT;
import javax.ws.rs.PathParam;
import javax.ws.rs.core.MediaType;
import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.criterion.Restrictions;

/**
 * REST Web Service
 *
 * @author Niklas
 */
@Path("person")
public class PersonResource {

    @Context
    private UriInfo context;

    /**
     * Creates a new instance of PersonResource
     */
    public PersonResource() {
    }

    /**
     * Retrieves representation of an instance of Rest.PersonResource
     * @return an instance of java.lang.String
     */
    @GET
    @Produces(MediaType.APPLICATION_XML)
    public String getXml() {
        //TODO return proper representation object
        throw new UnsupportedOperationException();
    }

    /**
     * PUT method for updating or creating an instance of PersonResource
     * @param content representation for the resource
     */
    @PUT
    @Consumes(MediaType.TEXT_PLAIN)
   
    public void putXml(String content) {
        String[] stringArray = content.split(",");
        
        Person p1 = new Person(stringArray[0], stringArray[1], stringArray[2], 0, new HashMap<Long,Note>(), new ArrayList<Note>());
        Session session = HibernateStuff.getInstance().getSessionFactory().openSession();
        session.beginTransaction();

        session.saveOrUpdate(p1);
        session.getTransaction().commit();
        System.out.println("");
    }
    
    
    
    @Path("/{personId}")
    @GET
    @Produces(MediaType.APPLICATION_XML)
    public Person getPerson(@PathParam("personId") long id){
        Session session = HibernateStuff.getInstance().getSessionFactory().openSession();
        session.beginTransaction();
        
        System.out.println(id+" on Numero");
        
        List persons = session.createCriteria(Person.class).setResultTransformer(Criteria.DISTINCT_ROOT_ENTITY).add(Restrictions.eq("id", id)).list();
        session.getTransaction().commit();
        Person person = (Person) persons.get(0);
        
        return person;
    }
    
    
}
