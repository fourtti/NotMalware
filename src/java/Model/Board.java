package Model;


import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.persistence.CascadeType;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Niklas
 */
@XmlRootElement
public class Board {
    private long id;
    private String name;
    private Map<Long,Note> openTasks;
    private Map<Long,Person> personMap;

    public Board() {
    this.id = 0L;
    openTasks = new HashMap<Long,Note>();
    personMap = new HashMap<Long,Person>();
    }

    
    @XmlElement
    @Id
    @GeneratedValue
    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    
    @XmlElement
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    
    @XmlElement
    @OneToMany(targetEntity = Note.class, fetch = FetchType.EAGER, cascade = CascadeType.ALL)
    public Map<Long, Note> getOpenTasks() {
        return openTasks;
    }

    public void setOpenTasks(Map<Long, Note> openTasks) {
        this.openTasks = openTasks;
    }
    
    
    @XmlElement
    @OneToMany(targetEntity = Person.class, fetch = FetchType.EAGER, cascade = CascadeType.ALL)
    public Map<Long, Person> getPersonMap() {
        return personMap;
    }

    public void setPersonMap(Map<Long, Person> personMap) {
        this.personMap = personMap;
    }
    
    
    /**
     Adds note in parameter to Open Note List.
     */
    public void addNote(long noteID,Note note){
        openTasks.put(noteID,note);
    }
    
    
    /**
     * edits the note and changes heading and content to values given in the parameter.
     * 
     * 
     * @param noteID
     * @param noteHeading
     * @param noteContent 
     */
    public void editNote(long noteID,String noteHeading,String noteContent){
        Note noteToEdit = getOpenTasks().get(noteID);
        noteToEdit.setHeading(noteHeading);
        noteToEdit.setContent(noteContent);
    }
    
    public void editNote(long personID,long noteID,String noteHeading,String noteContent){
        Note noteToEdit = getPersonMap().get(personID).getPersonalNotes().get(noteID);
        noteToEdit.setHeading(noteHeading);
        noteToEdit.setContent(noteContent);
        
    }
    
    public void assignNote(long personID,long noteID){
        Note noteToEdit = getOpenTasks().get(noteID);
        getPersonMap().get(personID).getPersonalNotes().put(noteID,noteToEdit);
        getOpenTasks().remove(noteID);
        
    }
    
    
    
    
    
}
