package Model;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinTable;
import javax.persistence.OneToMany;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;

@XmlRootElement
@Entity
public class Person {
    private long id;
    private String name;
    private String password;
    private String email;
    private int accessLevel;
    private Map<Long,Note> personalNotes;
    private Map<Long,Note> completedNotes;

    public Person() {
        this("Unknown","","",0,new HashMap<Long,Note>(), new HashMap<Long,Note>());
    
    }
    
    
    
    
    public Person(String name,String password,String email, int accessLevel, Map<Long,Note> personalNotes, Map<Long,Note> completedNotes) {
        this.id = 0L;
        this.name = name;
        this.password = password;
        this.email = email;
        this.accessLevel = accessLevel;
        this.personalNotes = personalNotes;
        this.completedNotes = completedNotes;
    }
    
    @XmlElement
    @Id
    @GeneratedValue
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }
    
    
    //Persons Username
    @XmlElement
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    
    //password in plain text
    @XmlElement
    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }
    
    //email of user
    @XmlElement
    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }
    
    //all personal tasks of the user
    @XmlElement
    @JoinTable(name = "person_personal_note")
    @OneToMany(targetEntity = Note.class, fetch = FetchType.EAGER, cascade = CascadeType.ALL)
    public Map<Long, Note> getPersonalNotes() {
        return personalNotes;
    }

    public void setPersonalNotes(Map<Long, Note> personalNotes) {
        this.personalNotes = personalNotes;
    }
    
    //the compleated tasks of the person
    @XmlElement
    @JoinTable(name = "person_compleated_note")
    @OneToMany(targetEntity = Note.class, fetch = FetchType.EAGER, cascade = CascadeType.ALL)
    public Map<Long,Note> getCompletedNotes() {
        return this.completedNotes;
    }

    public void setCompletedNotes(Map<Long,Note> completedNotes) {
        this.completedNotes = completedNotes;
    }
    
    //persons job
    @XmlElement
    public int getAccessLevel() {
        return this.accessLevel;
    }

    public void setAccessLevel(int accessLevel) {
        this.accessLevel = accessLevel;
    }
    
    
    public void completeNote(long id) {
        personalNotes.remove(id);
        completedNotes.put(id,personalNotes.get(id));
    }
    
}
